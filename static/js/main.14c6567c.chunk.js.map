{"version":3,"sources":["Components/Navbar/Navbar.module.css","Components/Tuesday/ToDoList/ToDoListFooter/ToDoListFooter.module.css","Components/Tuesday/ToDoList/ToDoListTasks/ToDoListTask/ToDoListTask.module.css","Components/Tuesday/ToDoList/ToDoListTasks/ToDoListTasks.module.css","Components/BurgerMenu/BurgerMenu.module.css","Components/Monday/MessageCloud/Cloud/Cloud.module.css","Components/Wednesday/SendingPostRequest/SendingPostRequest.module.css","Components/Wednesday/ThemesSettings/ThemesSettings.module.css","Components/Monday/CharacterList/CharacterItem/CharacterItem.module.css","Components/Monday/HelloCounter/Input/Input.module.css","Components/Tuesday/ToDoList/ToDoListHeader/ToDoListHeader.module.css","App.module.css","Components/Monday/MessageCloud/MessageCloud.module.css","Components/Monday/MessageCloud/Avatar/Avatar.module.css","Components/Monday/CharacterList/CharacterList.module.css","Components/Monday/HelloCounter/HelloCounter.module.css","Components/Monday/HelloCounter/NamesList/NamesList.module.css","Components/Monday/HelloCounter/NamesList/NameListIItem/NameListItem.module.css","Components/Monday/HelloCounter/Counter/Counter.module.css","common/Button/Button.module.css","Components/Monday/Monday.module.css","Components/Monday/Header/Header.module.css","Components/Tuesday/ToDoList/ToDoList.module.css","Components/Tuesday/Tuesday.module.css","Components/Loading/Loading.module.css","assets/gif/35.gif","Components/Wednesday/Wednesday.module.css","Components/Wednesday/ThemesSettings/Theme/Theme.module.css","Components/BurgerMenu/BurgerMenu.tsx","Components/Navbar/Navbar.tsx","Components/Monday/MessageCloud/Avatar/Avatar.tsx","Components/Monday/MessageCloud/Cloud/Cloud.tsx","Components/Monday/MessageCloud/MessageCloud.tsx","Components/Monday/CharacterList/CharacterItem/CharacterItem.tsx","Components/Monday/CharacterList/CharacterList.tsx","Components/Monday/HelloCounter/NamesList/NameListIItem/NameListItem.tsx","Components/Monday/HelloCounter/NamesList/NamesList.tsx","Components/Monday/HelloCounter/Counter/Counter.tsx","Components/Monday/HelloCounter/Input/Input.tsx","common/Button/Button.tsx","Components/Monday/HelloCounter/HelloCounter.tsx","Components/Monday/Header/Header.tsx","Components/Monday/Monday.tsx","Components/Tuesday/ToDoList/ToDoListHeader/ToDoListHeader.tsx","Components/Tuesday/ToDoList/ToDoListTasks/ToDoListTask/TodoListTask.tsx","Components/Tuesday/ToDoList/ToDoListTasks/ToDoListTasks.tsx","Components/Tuesday/ToDoList/ToDoListFooter/TodoListFooter.tsx","localSave.js","Components/Tuesday/ToDoList/ToDoList.tsx","Components/Tuesday/Tuesday.tsx","Components/Loading/Loading.tsx","dal/api.ts","redux/requestReducer.ts","Components/Wednesday/SendingPostRequest/SendingPostRequest.tsx","redux/settingsReducer.ts","Components/Wednesday/ThemesSettings/Theme/Theme.tsx","Components/Wednesday/ThemesSettings/ThemesSettings.tsx","Components/Wednesday/Wednesday.tsx","redux/loadingReducer.ts","App.tsx","serviceWorker.js","redux/store.ts","index.jsx"],"names":["module","exports","BurgerMenu","props","classBurgerMenu","isMenuOpen","style","burgerMenuIcon","active","className","burgerMenuWrapper","onClick","Navbar","state","menuActive","showHideMenu","setState","render","menuActiveClass","menu","shadowClass","shadow","shadowNone","menuList","item","to","activeClassName","buttonNavbar","React","Component","Avatar","avatar","src","alt","Cloud","cloud","cloudName","cloudText","cloudTime","MessageCloud","cloudWrapper","CharacterItem","classCharacterItemRed","filterValue","character","characterItemRed","characterItem","CharacterList","characterElements","id","map","ch","key","characterListWrapper","NameListItem","name","NamesList","namesListElements","namesList","n","namesListWrapper","Counter","counter","counterValue","Input","input","error","type","placeholder","placeholderValue","onChange","e","changeInputText","currentTarget","value","onKeyPress","inputText","Button","button","disabled","nameButton","HelloCounter","newText","addName","newCounterValue","newNameListItem","alert","newNamesList","helloCounterWrapper","Header","header","Monday","mondayWrapper","TodoListHeader","onAddTaskClick","addTask","onFilterChange","todoListHeader","inputArea","TodoListTask","editModeTitle","editModePriority","onIsDoneChanged","changeStatus","task","checked","activateEditModeTitle","activateEditModePriority","deActivateEditMode","onTitleChanged","changeTitle","onPriorityChanged","changePriority","onDeleteTaskClick","deleteTask","taskIsDoneClass","isDone","todoListTask","taskDates","created","updated","finished","title","taskTitle","autoFocus","onBlur","priority","TodoListTasks","tasksElements","tasks","todoListTasksWrapper","done","taskName","delete","TodoListFooter","isHidden","onAllFilterClick","changeFilter","onCompletedFilterClick","onActiveFilterClick","onShowFiltersClick","onHideFiltersClick","classForAll","buttonsFooter","filterActive","classForCompleted","classForActive","todoListFooter","buttonsWrapper","clearAll","deleteAllTasks","saveState","stateAsString","JSON","stringify","localStorage","setItem","ToDoList","nextTaskId","defaultState","newTitle","newTask","Date","toLocaleString","newTasks","newFilterValue","changeTask","taskId","obj","t","filter","index","length","clear","toDoListWrapper","this","getItem","parse","restoreState","Tuesday","tuesdayWrapper","Loading","loader","gif","instance","axios","create","baseURL","api","success","post","tryCatch","func","a","response","console","log","data","CHANGE_SUCCESS","SHOW_MESSAGE","initialState","isWaiting","responseMessage","toggleWaitingResponse","showMessage","SendingPostRequest","onRequestSend","getServerResponse","onSuccessChange","changeSuccess","pageTheme","styles","wrapper","requestMessage","ConnectedPostRequest","connect","request","dispatch","then","errorText","SET_THEME","themes","Theme","themSelector","onChangeClick","ThemesSettings","themesSettingsWrapper","theme","setTheme","themeItem","themesSettings","ConnectedWednesday","settings","wednesdayWrapper","SET_LOADING","isLoading","App","appWrapper","path","setTimeout","setLoading","ConnectedApp","loading","Boolean","window","location","hostname","match","rootReducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.14c6567c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Navbar_menu__32WYf\",\"shadow\":\"Navbar_shadow__BXITF\",\"shadowNone\":\"Navbar_shadowNone__2fYr8\",\"menuActive\":\"Navbar_menuActive__3W-EQ\",\"menuList\":\"Navbar_menuList__1AzB6\",\"item\":\"Navbar_item__1jYhS\",\"active\":\"Navbar_active__3F1nD\",\"buttonNavbar\":\"Navbar_buttonNavbar__Joqv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListFooter\":\"ToDoListFooter_todoListFooter__21rDm\",\"buttonsWrapper\":\"ToDoListFooter_buttonsWrapper__1F6Qj\",\"buttonsFooter\":\"ToDoListFooter_buttonsFooter__21xMN\",\"filterActive\":\"ToDoListFooter_filterActive__2IvfN\",\"clearAll\":\"ToDoListFooter_clearAll__397OV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskTitle\":\"ToDoListTask_taskTitle__2Xc4s\",\"todoListTask\":\"ToDoListTask_todoListTask__clsIM\",\"isDone\":\"ToDoListTask_isDone__1O-J4\",\"deleteTask\":\"ToDoListTask_deleteTask__2zCFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListTasksWrapper\":\"ToDoListTasks_todoListTasksWrapper__2DzQM\",\"done\":\"ToDoListTasks_done__2VqyR\",\"id\":\"ToDoListTasks_id__1Tlfj\",\"taskName\":\"ToDoListTasks_taskName__2wip4\",\"priority\":\"ToDoListTasks_priority__3D_jL\",\"delete\":\"ToDoListTasks_delete__OZ4Xr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerMenuWrapper\":\"BurgerMenu_burgerMenuWrapper__1-O2P\",\"burgerMenuIcon\":\"BurgerMenu_burgerMenuIcon__2Z8vB\",\"active\":\"BurgerMenu_active__1Rh7X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloud\":\"Cloud_cloud__3xPwq\",\"cloudName\":\"Cloud_cloudName__1EI9m\",\"cloudText\":\"Cloud_cloudText__BEBy9\",\"cloudTime\":\"Cloud_cloudTime__3L4Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SendingPostRequest_wrapper__2xGUu\",\"original\":\"SendingPostRequest_original__247MD\",\"dark\":\"SendingPostRequest_dark__1Jir4\",\"light\":\"SendingPostRequest_light__RHjje\",\"red\":\"SendingPostRequest_red__1hmCr\",\"green\":\"SendingPostRequest_green__2J_Qm\",\"success\":\"SendingPostRequest_success__qItFy\",\"requestMessage\":\"SendingPostRequest_requestMessage__2Au3J\",\"typing\":\"SendingPostRequest_typing__2C_Zo\",\"blink-caret\":\"SendingPostRequest_blink-caret__ErXqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themesSettingsWrapper\":\"ThemesSettings_themesSettingsWrapper__1535O\",\"original\":\"ThemesSettings_original__2Z3yD\",\"dark\":\"ThemesSettings_dark__3N7Bx\",\"light\":\"ThemesSettings_light__2h3RI\",\"red\":\"ThemesSettings_red__1cCZY\",\"green\":\"ThemesSettings_green__3URKX\",\"themesSettings\":\"ThemesSettings_themesSettings__l5Sxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterItem\":\"CharacterItem_characterItem__1okap\",\"characterItemRed\":\"CharacterItem_characterItemRed__3MGKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2tE4P\",\"error\":\"Input_error__3nQkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListHeader\":\"ToDoListHeader_todoListHeader__rmBYG\",\"inputArea\":\"ToDoListHeader_inputArea__2zdTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__12bTr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloudWrapper\":\"MessageCloud_cloudWrapper__1ktWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2wTvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterListWrapper\":\"CharacterList_characterListWrapper__NmDVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helloCounterWrapper\":\"HelloCounter_helloCounterWrapper__-mnTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"namesListWrapper\":\"NamesList_namesListWrapper__f0Mik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterItem\":\"NameListItem_characterItem__3f6kV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__zjJrJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__135XK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mondayWrapper\":\"Monday_mondayWrapper__1sHYs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__63ask\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoListWrapper\":\"ToDoList_toDoListWrapper__3g2VI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tuesdayWrapper\":\"Tuesday_tuesdayWrapper__2J65H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loading_loader__1q4fQ\"};","module.exports = __webpack_public_path__ + \"static/media/35.f611c450.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wednesdayWrapper\":\"Wednesday_wednesdayWrapper__QjHeu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themSelector\":\"Theme_themSelector__2rUy0\"};","import React from 'react';\r\nimport style from './BurgerMenu.module.css';\r\n\r\ntype PropsType = {\r\n    isMenuOpen: boolean\r\n    onClick: () => void\r\n}\r\n\r\nconst BurgerMenu = (props: PropsType) => {\r\n\r\n    let classBurgerMenu = props.isMenuOpen ? style.burgerMenuIcon + ' ' + style.active : style.burgerMenuIcon;\r\n\r\n    return (\r\n        <div className={style.burgerMenuWrapper} onClick={props.onClick}>\r\n            <div className={classBurgerMenu}>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BurgerMenu;","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport BurgerMenu from \"../BurgerMenu/BurgerMenu\";\r\n\r\ntype StateType = {\r\n    menuActive: boolean\r\n}\r\n\r\n\r\nclass Navbar extends React.Component {\r\n\r\n    state: StateType = {\r\n        menuActive: false,\r\n    };\r\n\r\n\r\n    showHideMenu = () => {\r\n        this.state.menuActive\r\n            ? this.setState({menuActive: false})\r\n            : this.setState({menuActive: true});\r\n    };\r\n\r\n    render = () => {\r\n\r\n        let menuActiveClass = this.state.menuActive ? style.menu + ' ' + style.menuActive : style.menu;\r\n        let shadowClass = this.state.menuActive ? style.shadow : style.shadow + ' ' + style.shadowNone;\r\n\r\n        return (\r\n            <>\r\n                <div className={menuActiveClass}>\r\n                    <div className={style.menuList}>\r\n                        <div className={style.item}>\r\n                            <NavLink to='/monday' activeClassName={style.active}>monday</NavLink>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <NavLink to='/tuesday' activeClassName={style.active}>tuesday</NavLink>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <NavLink to='/wednesday' activeClassName={style.active}>wednesday</NavLink>\r\n                        </div>\r\n\r\n                        <div className={style.buttonNavbar}>\r\n                            <BurgerMenu onClick={this.showHideMenu} isMenuOpen={this.state.menuActive}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={shadowClass}\r\n                     onClick={this.showHideMenu}>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport style from './Avatar.module.css';\r\n\r\nconst Avatar = () => {\r\n    return (\r\n        <div className={style.avatar}>\r\n            <img\r\n                src='https://www.vippng.com/png/detail/235-2350325_dicks-out-for-harambe-sample-image-avatar-png.png'\r\n                alt='avatar'/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport style from './Cloud.module.css';\r\n\r\nconst Cloud = () => {\r\n    return (\r\n        <div className={style.cloud}>\r\n            <div className={style.cloudName}>\r\n               <span>Максим Белый</span>\r\n            </div>\r\n            <div className={style.cloudText}>\r\n                <span>Привет!!! Как дела?</span>\r\n            </div>\r\n            <div className={style.cloudTime}>\r\n                <span>15:35</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cloud;","import React from 'react';\r\nimport style from './MessageCloud.module.css';\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport Cloud from \"./Cloud/Cloud\";\r\n\r\nconst MessageCloud = () => {\r\n    return (\r\n        <div className={style.cloudWrapper}>\r\n            <Avatar/>\r\n            <Cloud/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MessageCloud;","import React from 'react';\r\nimport style from './CharacterItem.module.css';\r\n\r\ntype PropsType ={\r\n    filterValue: string\r\n    character: string\r\n}\r\n\r\nconst CharacterItem = (props: PropsType) => {\r\n\r\n    let classCharacterItemRed = props.filterValue === props.character ? style.characterItemRed : \"\";\r\n\r\n    return (\r\n        <div className={style.characterItem + \" \" + classCharacterItemRed} >\r\n            <span>{props.character}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CharacterItem;","import React from 'react';\r\nimport style from './CharacterList.module.css';\r\nimport CharacterItem from \"./CharacterItem/CharacterItem\";\r\n\r\n\r\ntype CharacterType = {\r\n    id: number\r\n    character: string\r\n}\r\n\r\nconst CharacterList = () => {\r\n\r\n    let charactersList: Array<CharacterType> = [\r\n        {id: 1, character: \"Оптимист\"},\r\n        {id: 2, character: \"Авантюрист\"},\r\n        {id: 3, character: \"Рационалист\"},\r\n        {id: 4, character: \"Альтруист\"}\r\n    ];\r\n\r\n    let filterValue: string = \"Авантюрист\";\r\n\r\n    let characterElements = charactersList.map(ch => {\r\n        return <CharacterItem character={ch.character} filterValue={filterValue} key={ch.id}/>\r\n    });\r\n\r\n    return (\r\n        <div className={style.characterListWrapper}>\r\n            {characterElements}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CharacterList;","import React from 'react';\r\nimport style from './NameListItem.module.css';\r\n\r\ntype PropsType = {\r\n    name: string\r\n}\r\n\r\nconst NameListItem = (props: PropsType) => {\r\n\r\n\r\n    return (\r\n        <div className={style.characterItem}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NameListItem;","import React from 'react';\r\nimport style from './NamesList.module.css'\r\nimport NameListItem from \"./NameListIItem/NameListItem\";\r\nimport { NameType } from '../HelloCounter';\r\n\r\ntype PropsType = {\r\n    namesList: Array<NameType>\r\n}\r\n\r\nconst NamesList = (props: PropsType) => {\r\n\r\n    let namesListElements = props.namesList.map(n => {\r\n        return <NameListItem name={n.name} key={n.id} />\r\n    });\r\n\r\n    return (\r\n        <div className={style.namesListWrapper}>\r\n            {namesListElements}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default NamesList;","import React from 'react';\r\nimport style from './Counter.module.css'\r\n\r\ntype PropsType = {\r\n    counterValue: number\r\n}\r\n\r\nconst Counter = (props: PropsType) => {\r\n\r\n    return (\r\n        <div className={style.counter}>\r\n            <span>{props.counterValue}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Counter;","import React, { ChangeEvent, KeyboardEvent } from 'react';\r\nimport style from './Input.module.css'\r\n\r\n\r\ntype PropsType = {\r\n    changeInputText: (newText: string)=>void\r\n    onKeyPress: ()=>void\r\n    error: boolean\r\n    placeholderValue: string\r\n    inputText: string\r\n}\r\n\r\nconst Input = (props: PropsType) => {\r\n\r\n\r\n    let onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.changeInputText(e.currentTarget.value)\r\n    };\r\n\r\n    let onKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === \"Enter\") {\r\n            props.onKeyPress()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input className={`${style.input} ${props.error ? style.error : ''}`}\r\n                   type=\"text\"\r\n                   placeholder={props.placeholderValue}\r\n                   onChange={onInputChange}\r\n                   onKeyPress={onKeyPress}\r\n                   value={props.inputText}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Input;","import React from 'react';\r\nimport style from './Button.module.css'\r\n\r\ntype PropsType = {\r\n    nameButton: string\r\n    disabled: boolean\r\n    onClick: () => void\r\n\r\n}\r\n\r\nconst Button = (props: PropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <button className={style.button}\r\n                    onClick={props.onClick}\r\n                    disabled={props.disabled}\r\n            >{props.nameButton}\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Button;","import React from 'react';\r\nimport style from './HelloCounter.module.css';\r\nimport NamesList from \"./NamesList/NamesList\";\r\nimport Counter from \"./Counter/Counter\";\r\nimport Input from \"./Input/Input\";\r\nimport Button from \"../../../common/Button/Button\";\r\n\r\ntype StateType = {\r\n    namesList: Array<NameType>\r\n    counterValue: number\r\n    inputText: string\r\n    error: boolean\r\n    placeholderValue: string\r\n}\r\n\r\nexport type NameType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n\r\n\r\nclass HelloCounter extends React.Component {\r\n\r\n    state: StateType = {\r\n        namesList: [],\r\n        counterValue: 0,\r\n        inputText: '',\r\n        error: false,\r\n        placeholderValue: 'Введите имя'  //Текст заполнитель в инпуте\r\n    };\r\n\r\n    changeInputText = (newText: string) => {\r\n        this.setState({\r\n                error: false,\r\n                inputText: newText\r\n            }\r\n        )\r\n    };\r\n\r\n\r\n    addName = () => {\r\n        let newCounterValue = this.state.counterValue + 1;\r\n        let newText = this.state.inputText;\r\n        if (newText === '') {\r\n            this.setState({error: true});\r\n        } else {\r\n            let newNameListItem = {\r\n                name: newText,\r\n                id: this.state.counterValue + 1\r\n            };\r\n            alert('Привет ' + newText + '!!!');\r\n            this.setState({inputText: ''});\r\n            let newNamesList = [...this.state.namesList, newNameListItem];\r\n            this.setState({\r\n                namesList: newNamesList,\r\n                counterValue: newCounterValue\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={style.helloCounterWrapper}>\r\n                <Counter counterValue={this.state.counterValue}/>\r\n                <Input onKeyPress={this.addName}\r\n                       error={this.state.error}\r\n                       placeholderValue={this.state.placeholderValue}\r\n                       inputText={this.state.inputText}\r\n                       changeInputText={this.changeInputText}/>\r\n                <Button onClick={this.addName}\r\n                        disabled={false}\r\n                        nameButton={'Добавить имя в список'}/>\r\n                <NamesList namesList={this.state.namesList}/>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default HelloCounter;","import React from 'react';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={style.header}>\r\n            <h1>\r\n                Максим Белый\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport MessageCloud from \"./MessageCloud/MessageCloud\";\r\nimport CharacterList from \"./CharacterList/CharacterList\";\r\nimport HelloCounter from \"./HelloCounter/HelloCounter\";\r\nimport style from './Monday.module.css'\r\nimport Header from \"./Header/Header\";\r\n\r\n\r\nconst Monday = () => {\r\n    return (\r\n        <div className={style.mondayWrapper}>\r\n            <Header/>\r\n            <MessageCloud/>\r\n            <CharacterList/>\r\n            <HelloCounter/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Monday;\r\n\r\n\r\n","import React from 'react';\r\nimport style from './ToDoListHeader.module.css';\r\nimport Input from \"../../../Monday/HelloCounter/Input/Input\";\r\nimport Button from \"../../../../common/Button/Button\";\r\n\r\ntype PropsType = {\r\n    addTask: (newText: string) => void\r\n}\r\n\r\ntype StateType = {\r\n    inputText: string\r\n    error: boolean\r\n    placeholderValue: string\r\n}\r\n\r\nclass TodoListHeader extends React.Component<PropsType> {\r\n\r\n    state: StateType = {\r\n        inputText: '',\r\n        error: false,\r\n        placeholderValue: 'New task name'\r\n    };\r\n\r\n\r\n    onAddTaskClick = () => {\r\n        let newText = this.state.inputText;\r\n        this.setState({inputText: \"\"});\r\n        if (newText === \"\") {\r\n            this.setState({error: true})\r\n        } else {\r\n            this.setState({error: false});\r\n            this.props.addTask(newText);\r\n        }\r\n\r\n    };\r\n\r\n    onFilterChange = (newText: string) => {\r\n        this.setState({\r\n            error: false,\r\n            inputText: newText\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render = () => {\r\n\r\n\r\n        return (\r\n            <div className={style.todoListHeader}>\r\n                <h3>What to Learn</h3>\r\n                <div className={style.inputArea}>\r\n                    <Input onKeyPress={this.onAddTaskClick}\r\n                           error={this.state.error}\r\n                           placeholderValue={this.state.placeholderValue}\r\n                           inputText={this.state.inputText}\r\n                           changeInputText={this.onFilterChange}\r\n                    />\r\n                    <Button onClick={this.onAddTaskClick}\r\n                            nameButton={'Add'}\r\n                            disabled={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListHeader;\r\n\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport style from './ToDoListTask.module.css'\r\nimport {TaskType} from \"../../ToDoList\";\r\n\r\ntype StateType = {\r\n    editModeTitle: boolean\r\n    editModePriority: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    task: TaskType\r\n    changeStatus: (taskId: number, isDone: boolean) => void\r\n    changeTitle: (taskId: number, title: string) => void\r\n    changePriority: (taskId: number, priority: string) => void\r\n    deleteTask: (id: number) => void\r\n}\r\n\r\nclass TodoListTask extends React.Component<PropsType> {\r\n    state: StateType = {\r\n        editModeTitle: false,\r\n        editModePriority: false,\r\n    };\r\n\r\n    onIsDoneChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.props.changeStatus(this.props.task.id, e.currentTarget.checked)\r\n    };\r\n\r\n    activateEditModeTitle = () => {\r\n        this.setState({editModeTitle: true})\r\n    };\r\n\r\n    activateEditModePriority = () => {\r\n        this.setState({editModePriority: true})\r\n    };\r\n\r\n    deActivateEditMode = () => {\r\n        this.setState({editModeTitle: false, editModePriority: false})\r\n    };\r\n\r\n    onTitleChanged = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.props.changeTitle(this.props.task.id, e.currentTarget.value)\r\n    };\r\n\r\n    onPriorityChanged = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        this.props.changePriority(this.props.task.id, e.currentTarget.value)\r\n    };\r\n\r\n    onDeleteTaskClick = () => {\r\n        this.props.deleteTask(this.props.task.id)\r\n    }\r\n\r\n\r\n    render = () => {\r\n        let taskIsDoneClass = this.props.task.isDone ? style.todoListTask + ' ' + style.isDone : style.todoListTask;\r\n        let taskDates = 'Created: ' + this.props.task.created + '\\nUpdated: ' + this.props.task.updated + '\\nFinished: ' + this.props.task.finished;\r\n\r\n        return (\r\n\r\n            <tr title={taskDates}>\r\n                <td>\r\n                    <input className={taskIsDoneClass} type=\"checkbox\" checked={this.props.task.isDone}\r\n                           onChange={this.onIsDoneChanged}/>\r\n                </td>\r\n                <td>\r\n                    <span className={taskIsDoneClass}>{this.props.task.id}</span>\r\n                </td>\r\n                <td className={style.taskTitle}>\r\n                    {this.state.editModeTitle ?\r\n                        <input\r\n                            className={style.todoListTask}\r\n                            value={this.props.task.title}\r\n                           autoFocus={true}\r\n                            onBlur={this.deActivateEditMode}\r\n                            onChange={this.onTitleChanged}\r\n                        /> :\r\n                        <span className={taskIsDoneClass}\r\n                              onClick={this.activateEditModeTitle}>{this.props.task.title}</span>\r\n                    }\r\n                </td>\r\n                <td>\r\n                    {this.state.editModePriority ?\r\n                        <select\r\n                            className={style.todoListTask}\r\n                            value={this.props.task.priority}\r\n                            autoFocus={true}\r\n                            onBlur={this.deActivateEditMode}\r\n                            onChange={this.onPriorityChanged}\r\n                        >\r\n                            <option>high</option>\r\n                            <option>medium</option>\r\n                            <option>low</option>\r\n                        </select> :\r\n                        <span className={taskIsDoneClass}\r\n                              onClick={this.activateEditModePriority}>{this.props.task.priority}</span>\r\n                    }\r\n                </td>\r\n                <td>\r\n                    <button className={style.deleteTask} onClick={this.onDeleteTaskClick}>X</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n}\r\n\r\nexport default TodoListTask;","import React from 'react';\r\nimport TodoListTask from \"./ToDoListTask/TodoListTask\";\r\nimport style from './ToDoListTasks.module.css'\r\nimport {TaskType} from \"../ToDoList\";\r\n\r\ntype PropsType = {\r\n    tasks: Array<TaskType>\r\n    changeStatus: (taskId: number, isDone: boolean) => void\r\n    changeTitle: (taskId: number, title: string) => void\r\n    changePriority: (taskId: number, priority: string) => void\r\n    deleteTask: (id: number) => void\r\n}\r\n\r\nclass TodoListTasks extends React.Component<PropsType> {\r\n\r\n\r\n    render = () => {\r\n        let tasksElements = this.props.tasks.map(task => <TodoListTask\r\n                changeTitle={this.props.changeTitle}\r\n                changeStatus={this.props.changeStatus}\r\n                changePriority={this.props.changePriority}\r\n                task={task}\r\n                deleteTask={this.props.deleteTask}\r\n            />\r\n        );\r\n\r\n        return (\r\n            <div className={style.todoListTasksWrapper}>\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className={style.done}>Done</th>\r\n                        <th className={style.id}>ID</th>\r\n                        <th className={style.taskName}>Task name</th>\r\n                        <th className={style.priority}>Priority</th>\r\n                        <th className={style.delete}>Delete</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {tasksElements}\r\n                    </tbody>\r\n                </table>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListTasks;","import React from \"react\";\r\nimport style from './ToDoListFooter.module.css'\r\n\r\ntype StateType = {\r\n    isHidden: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    changeFilter: (filterValue: string) => void\r\n    filterValue: string\r\n    deleteAllTasks: () => void\r\n}\r\n\r\nclass TodoListFooter extends React.Component<PropsType> {\r\n\r\n    state: StateType = {\r\n        isHidden: false\r\n    };\r\n\r\n    onAllFilterClick = () => {\r\n        this.props.changeFilter(\"All\")\r\n    };\r\n    onCompletedFilterClick = () => {\r\n        this.props.changeFilter(\"Completed\")\r\n    };\r\n    onActiveFilterClick = () => {\r\n        this.props.changeFilter(\"Active\")\r\n    };\r\n    onShowFiltersClick = () => {\r\n        this.setState({isHidden: false})\r\n    };\r\n    onHideFiltersClick = () => {\r\n        this.setState({isHidden: true})\r\n    };\r\n\r\n\r\n    render = () => {\r\n        let classForAll = this.props.filterValue === \"All\" ? style.buttonsFooter + ' ' + style.filterActive : style.buttonsFooter;\r\n        let classForCompleted = this.props.filterValue === \"Completed\" ? style.buttonsFooter + ' ' + style.filterActive : style.buttonsFooter;\r\n        let classForActive = this.props.filterValue === \"Active\" ? style.buttonsFooter + ' ' + style.filterActive : style.buttonsFooter;\r\n\r\n        return (\r\n            <div className={style.todoListFooter}>\r\n                {!this.state.isHidden && <div className={style.buttonsWrapper}>\r\n                    <div>\r\n                        <button className={classForAll} onClick={() => {\r\n                            this.setState(this.onAllFilterClick)\r\n                        }}>All\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            className={classForCompleted}\r\n                            onClick={() => {\r\n                                this.setState(this.onCompletedFilterClick)\r\n                            }}>Completed\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            className={classForActive}\r\n                            onClick={() => {\r\n                                this.setState(this.onActiveFilterClick)\r\n                            }}>Active\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button\r\n                            className={style.clearAll}\r\n                            onClick={this.props.deleteAllTasks}>Clear all\r\n                        </button>\r\n                    </div>\r\n                {!this.state.isHidden && <button title=\"Hide\" className={style.buttonsFooter}\r\n                                                 onClick={this.onHideFiltersClick}>\r\n                    {'<'}</button>}\r\n                </div>}\r\n                {this.state.isHidden && <button title=\"Show\" className={style.buttonsFooter}\r\n                                                onClick={this.onShowFiltersClick}>\r\n                    {'>'}</button>}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoListFooter;\r\n\r\n","export const saveState = (key, state) => {\r\n    let stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n};\r\n\r\nexport const restoreState = (key, defaultState) => {\r\n    let state = defaultState;\r\n    let stateAsString = localStorage.getItem(key);\r\n    if (stateAsString != null) {\r\n        return state = JSON.parse(stateAsString);\r\n    }\r\n};","import React from 'react';\r\nimport style from './ToDoList.module.css';\r\nimport TodoListHeader from \"./ToDoListHeader/ToDoListHeader\";\r\nimport TodoListTasks from \"./ToDoListTasks/ToDoListTasks\";\r\nimport TodoListFooter from \"./ToDoListFooter/TodoListFooter\";\r\nimport {restoreState, saveState} from \"../../../localSave\";\r\n\r\ntype StateType = {\r\n    tasks: Array<TaskType>\r\n    filterValue: string\r\n}\r\n\r\nexport type TaskType = {\r\n    id: number\r\n    title: string\r\n    isDone: boolean\r\n    priority: string\r\n    created: string\r\n    updated: string\r\n    finished: string\r\n}\r\n\r\ntype ChangeTaskType = {\r\n    isDone?: boolean\r\n    title?: string\r\n    finished?: string\r\n    updated?: string\r\n    priority?: string\r\n}\r\n\r\n\r\nclass ToDoList extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.setState(restoreState('our-state', this.defaultState), () => {\r\n            this.nextTaskId = this.state.tasks.length\r\n        });\r\n    };\r\n\r\n    nextTaskId: number = 0;\r\n\r\n    state: StateType = {\r\n        tasks: [],\r\n        filterValue: 'All',\r\n    };\r\n\r\n    defaultState = {\r\n        tasks: [],\r\n        filterValue: 'All',\r\n    };\r\n\r\n\r\n    addTask = (newTitle: string) => {\r\n        let newTask = {\r\n            id: this.nextTaskId,\r\n            title: newTitle,\r\n            isDone: false,\r\n            priority: 'low',\r\n            created: (new Date()).toLocaleString(),\r\n            updated: '-',\r\n            finished: '-'\r\n        };\r\n        this.nextTaskId++;\r\n        let newTasks = [...this.state.tasks, newTask];\r\n        this.setState({\r\n            tasks: newTasks\r\n        }, () => {\r\n            saveState('our-state', this.state);\r\n        });\r\n    };\r\n\r\n\r\n    changeFilter = (newFilterValue: string) => {\r\n        this.setState({\r\n                filterValue: newFilterValue\r\n            }, () => {\r\n                saveState('our-state', this.state);\r\n            }\r\n        );\r\n    };\r\n\r\n    changeTask = (taskId: number, obj: ChangeTaskType) => {\r\n        let newTasks = this.state.tasks.map(t => {\r\n            if (t.id !== taskId) {\r\n                return t;\r\n            } else {\r\n                return {...t, ...obj}\r\n            }\r\n        });\r\n        this.setState({\r\n            tasks: newTasks\r\n        }, () => {\r\n            saveState('our-state', this.state);\r\n        });\r\n    };\r\n\r\n    changeStatus = (taskId: number, isDone: boolean) => {\r\n        this.changeTask(taskId, {\r\n            isDone: isDone,\r\n            finished: isDone? new Date().toLocaleString(): '-',\r\n        })\r\n    };\r\n\r\n    changeTitle = (taskId: number, title: string) => {\r\n        this.changeTask(taskId, {\r\n            title: title,\r\n            updated: (new Date()).toLocaleString(),\r\n        })\r\n    };\r\n\r\n    changePriority = (taskId: number, priority: string) => {\r\n        this.changeTask(taskId, {\r\n            priority: priority,\r\n            updated: (new Date()).toLocaleString(),\r\n        })\r\n    };\r\n\r\n    deleteTask = (id: number) => {\r\n        let newTasks = this.state.tasks\r\n            .filter(task => task.id !== id)\r\n            .map((task, index) => ({...task, id: index}));\r\n        this.nextTaskId = newTasks.length;\r\n        this.setState({\r\n                tasks: newTasks,\r\n            },\r\n            () => {\r\n                saveState('our-state', this.state);\r\n            });\r\n    };\r\n\r\n\r\n    deleteAllTasks = () => {\r\n        localStorage.clear();\r\n        this.setState(this.defaultState, () => {\r\n            this.nextTaskId = this.state.tasks.length;\r\n        });\r\n    };\r\n\r\n\r\n    render = () => {\r\n\r\n        return (\r\n            <div className={style.toDoListWrapper}>\r\n                <TodoListHeader addTask={this.addTask}/>\r\n                <TodoListTasks\r\n                    deleteTask={this.deleteTask}\r\n                    changeTitle={this.changeTitle}\r\n                    changeStatus={this.changeStatus}\r\n                    changePriority={this.changePriority}\r\n                    tasks={this.state.tasks.filter(t => {\r\n                        if (this.state.filterValue === \"All\") {\r\n                            return true;\r\n                        }\r\n                        if (this.state.filterValue === \"Completed\") {\r\n                            return t.isDone;\r\n                        }\r\n                        if (this.state.filterValue === \"Active\") {\r\n                            return !t.isDone;\r\n                        }\r\n                    })}\r\n                />\r\n                <TodoListFooter\r\n                    filterValue={this.state.filterValue}\r\n                    changeFilter={this.changeFilter}\r\n                    deleteAllTasks={this.deleteAllTasks}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ToDoList;","import React from 'react';\r\nimport ToDoList from \"./ToDoList/ToDoList\";\r\nimport style from \"./Tuesday.module.css\";\r\n\r\n\r\nfunction Tuesday() {\r\n    return (\r\n        <div className={style.tuesdayWrapper}>\r\n            <ToDoList/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tuesday;\r\n\r\n\r\n","import React from 'react';\r\nimport style from './Loading.module.css';\r\nimport gif from '../../assets/gif/35.gif'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className={style.loader}>\r\n            <img src={gif} alt='loading...'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading;","import axios, {AxiosResponse} from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://neko-cafe-back.herokuapp.com/auth/test`\r\n});\r\n\r\ntype SendRequestType = {\r\n    errorText: string\r\n}\r\n\r\n\r\nexport const api = {\r\n    sendRequest(success: boolean) {\r\n        return instance.post<SendRequestType>(``, {success})\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const tryCatch = async (func: () => Promise<AxiosResponse<SendRequestType>>) => {\r\n    try {\r\n        const response = await func()\r\n        console.log('answer: ', response.data);\r\n        return response.data;\r\n    } catch (e) {\r\n        console.log('error: ', {...e});\r\n        return 'error';\r\n    }\r\n}\r\n\r\n\r\n","import {api, tryCatch} from \"../dal/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst CHANGE_SUCCESS = \"wednesday/reducer/CHANGE_SUCCESS\"\r\nconst TOGGLE_IS_WAITING_RESPONSE = \"wednesday/reducer/TOGGLE_IS_WAITING_RESPONSE\"\r\nconst SHOW_MESSAGE = \"wednesday/reducer/SHOW_MESSAGE\"\r\n\r\ntype InitialStateType = {\r\n    success: boolean\r\n    isWaiting: boolean\r\n    responseMessage: string\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    success: true,\r\n    isWaiting: false,\r\n    responseMessage: ''\r\n}\r\n\r\nexport const requestReducer = (state: InitialStateType = initialState, action: RequestReducerActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case CHANGE_SUCCESS:\r\n            return {\r\n                ...state, success: action.success\r\n            }\r\n        case TOGGLE_IS_WAITING_RESPONSE:\r\n            return {\r\n                ...state, isWaiting: action.isWaiting\r\n            }\r\n        case SHOW_MESSAGE:\r\n            return {\r\n                ...state, responseMessage: action.responseMessage\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n// action types\r\n\r\ntype RequestReducerActionsTypes = ChangeSuccessType | ToggleWaitingResponseType | ShowMessageType\r\n\r\ntype  ChangeSuccessType = {\r\n    type: typeof CHANGE_SUCCESS\r\n    success: boolean\r\n}\r\n\r\ntype  ToggleWaitingResponseType = {\r\n    type: typeof TOGGLE_IS_WAITING_RESPONSE\r\n    isWaiting: boolean\r\n}\r\n\r\ntype  ShowMessageType = {\r\n    type: typeof SHOW_MESSAGE\r\n    responseMessage: string\r\n}\r\n\r\n\r\n\r\n// action creators\r\n\r\nexport const changeSuccess = (success: boolean): ChangeSuccessType => {\r\n    return {type: CHANGE_SUCCESS, success}\r\n}\r\nconst toggleWaitingResponse = (isWaiting: boolean): ToggleWaitingResponseType => {\r\n    return {type: TOGGLE_IS_WAITING_RESPONSE, isWaiting}\r\n}\r\nconst showMessage = (responseMessage: string): ShowMessageType => {\r\n    return {type: SHOW_MESSAGE, responseMessage}\r\n}\r\n\r\n\r\n\r\nexport const getServerResponse = (success: boolean) => {\r\n    return (dispatch: Dispatch<RequestReducerActionsTypes>) => {\r\n        dispatch(toggleWaitingResponse(true));\r\n        tryCatch(() => api.sendRequest(success))\r\n            .then(response => {\r\n                dispatch(toggleWaitingResponse(false));\r\n                response === 'error'\r\n                    ? dispatch(showMessage(\"Произошла ошибка на сервере!\"))\r\n                    : dispatch(showMessage(`${response.errorText} Запрос отправлен!`));\r\n            })\r\n    }\r\n}\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport styles from './SendingPostRequest.module.css'\r\nimport Button from \"../../../common/Button/Button\";\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {changeSuccess, getServerResponse} from \"../../../redux/requestReducer\";\r\nimport Loading from \"../../Loading/Loading\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\n\r\n\r\ntype OwnPropsType = {\r\n    style: string\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    success: boolean\r\n    isWaiting: boolean\r\n    responseMessage: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    changeSuccess: (success: boolean) => void;\r\n    getServerResponse: (success: boolean) => void;\r\n}\r\n\r\ntype PropsType = OwnPropsType & MapDispatchPropsType & MapStatePropsType\r\n\r\n\r\nclass SendingPostRequest extends React.Component<PropsType, AppStateType> {\r\n\r\n\r\n    onRequestSend = () => {\r\n        this.props.getServerResponse(this.props.success)\r\n    }\r\n\r\n    onSuccessChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.props.changeSuccess(e.currentTarget.checked)\r\n    }\r\n\r\n    render = () => {\r\n        const pageTheme = styles.wrapper + ' ' + styles[this.props.style];\r\n        return (\r\n            <div className={pageTheme}>\r\n                <h2>Server request</h2>\r\n                <div className={styles.success}>\r\n                    <label>success:</label>\r\n                    <input type=\"checkbox\"\r\n                           checked={this.props.success}\r\n                           onChange={this.onSuccessChange}\r\n                    />\r\n                </div>\r\n                <Button nameButton='Send'\r\n                        onClick={this.onRequestSend}\r\n                        disabled={this.props.isWaiting}\r\n\r\n                />\r\n                <div className={styles.requestMessage}>\r\n                    {this.props.isWaiting\r\n                        ? <Loading/>\r\n                        : <div>\r\n                            <p>{this.props.responseMessage}</p>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        success: state.request.success,\r\n        isWaiting: state.request.isWaiting,\r\n        responseMessage: state.request.responseMessage\r\n    }\r\n}\r\n\r\nconst ConnectedPostRequest = connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, {\r\n    changeSuccess,\r\n    getServerResponse\r\n})(SendingPostRequest);\r\n\r\nexport default ConnectedPostRequest;\r\n","import { ThemeType } from \"../types/entities\"\r\n\r\nconst SET_THEME = \"wednesday/reducer/SET_THEME\"\r\n\r\ntype InitialStateType = {\r\n    themes: Array<ThemeType>\r\n    style: string\r\n}\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    themes: [\r\n        {id: 1, title: 'original'},\r\n        {id: 2, title: 'dark'},\r\n        {id: 3, title: 'light'},\r\n        {id: 4, title: 'red'},\r\n        {id: 5, title: 'green'},\r\n    ],\r\n    style: 'original'\r\n}\r\n\r\nexport const settingsReducer = (state: InitialStateType = initialState, action: SetThemeType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_THEME:\r\n            return {...state,\r\n                style: action.title\r\n                }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n//action types\r\ntype SetThemeType = {\r\n    type: typeof SET_THEME\r\n    title: string\r\n}\r\n\r\n//action\r\nexport const setTheme = (title: string) => {\r\n    return {type: SET_THEME, title}\r\n}\r\n","import React, {ChangeEvent} from \"react\";\r\nimport style from './Theme.module.css'\r\n\r\ntype OwnPropsType = {\r\n    key: number\r\n    title: string\r\n    name: string\r\n    onChangeClick: (theme: string)=>void\r\n    style: string\r\n}\r\n\r\n\r\nconst Theme = (props: OwnPropsType) => {\r\n    const onRadioInputCheck = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeClick(e.currentTarget.value);\r\n    }\r\n    return (\r\n        <div className={style.themSelector}>\r\n                <input type='radio'\r\n                       checked={props.style === props.title}\r\n                       name={props.name}\r\n                       onChange={onRadioInputCheck}\r\n                       value={props.title}/>\r\n                <label>{props.title}</label>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Theme;","import React from \"react\";\r\nimport styles from './ThemesSettings.module.css'\r\nimport Theme from \"./Theme/Theme\";\r\nimport {ThemeType} from \"../../../types/entities\";\r\n\r\ntype OwnPropsType = {\r\n    themes: Array<ThemeType>\r\n    style: string\r\n    setTheme: (theme: string) => void\r\n}\r\n\r\nconst ThemesSettings = (props: OwnPropsType) => {\r\n\r\n    const pageTheme = styles.themesSettingsWrapper + ' ' + styles[props.style];\r\n\r\n    const onChangeClick = (theme: string) => {\r\n        props.setTheme(theme);\r\n    }\r\n\r\n\r\n    const themeItem = props.themes.map(theme => <Theme key={theme.id}\r\n                                                       title={theme.title}\r\n                                                       name={'theme'}\r\n                                                       onChangeClick={onChangeClick}\r\n                                                       style={props.style}\r\n\r\n    />)\r\n\r\n    return (\r\n\r\n        <div className={pageTheme}>\r\n            <h2>Choose a theme:</h2>\r\n            <div className={styles.themesSettings}>\r\n                {themeItem}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ThemesSettings;\r\n","import React from 'react';\r\nimport style from './Wednesday.module.css'\r\nimport SendingPostRequest from \"./SendingPostRequest/SendingPostRequest\";\r\nimport {connect} from \"react-redux\";\r\nimport {setTheme} from \"../../redux/settingsReducer\";\r\nimport ThemesSettings from \"./ThemesSettings/ThemesSettings\";\r\nimport {ThemeType} from \"../../types/entities\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\n\r\n\r\ntype MapStatePropsType = {\r\n    themes: Array<ThemeType>\r\n    style: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setTheme: (theme: string) => void;\r\n}\r\n\r\ntype PropsType = MapDispatchPropsType & MapStatePropsType\r\n\r\nconst Wednesday = (props: PropsType) => {\r\n    return (\r\n        <div className={style.wednesdayWrapper}>\r\n            <ThemesSettings themes={props.themes}\r\n                            style={props.style}\r\n                            setTheme={props.setTheme}\r\n            />\r\n            <SendingPostRequest  style={props.style}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        themes: state.settings.themes,\r\n        style: state.settings.style,\r\n    }\r\n}\r\n\r\nconst ConnectedWednesday = connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {setTheme})(Wednesday);\r\nexport default ConnectedWednesday;\r\n","const SET_LOADING = \"app/reducer/SET_LOADING\"\r\n\r\ntype InitialStateType = {\r\n    isLoading: boolean\r\n}\r\n\r\nconst initialState = {\r\n    isLoading: true\r\n}\r\n\r\nexport const loadingReducer = (state: InitialStateType = initialState, action: SetLoadingType): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SetLoadingType = {\r\n    type: typeof SET_LOADING\r\n    isLoading: boolean\r\n}\r\n\r\nexport const setLoading = (isLoading: boolean): SetLoadingType => {\r\n    return {type: SET_LOADING, isLoading}\r\n}","import React from 'react';\r\nimport styles from './App.module.css';\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport Monday from \"./Components/Monday/Monday\";\r\nimport Tuesday from \"./Components/Tuesday/Tuesday\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Loading from \"./Components/Loading/Loading\";\r\nimport Wednesday from \"./Components/Wednesday/Wednesday\";\r\nimport {connect} from \"react-redux\";\r\nimport {setLoading} from \"./redux/loadingReducer\";\r\nimport {AppStateType} from \"./redux/store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n    isLoading: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setLoading: (isLoading: boolean) => void;\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass App extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n                this.props.setLoading(false)\r\n            }, 500\r\n        )\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={styles.appWrapper}>\r\n                {this.props.isLoading ?\r\n                    <Loading/> :\r\n                    <>\r\n                        <Navbar/>\r\n                        <Route path='/monday' render={() => <Monday/>}/>\r\n                        <Route path='/tuesday' render={() => <Tuesday/>}/>\r\n                        <Route path='/wednesday' render={() => <Wednesday/>}/>\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isLoading: state.loading.isLoading\r\n    }\r\n}\r\n\r\nconst ConnectedApp = connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {setLoading})(App);\r\nexport default ConnectedApp;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {loadingReducer} from \"./loadingReducer\";\r\nimport {settingsReducer} from \"./settingsReducer\";\r\nimport {requestReducer} from \"./requestReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\nlet rootReducers = combineReducers({\r\n    loading: loadingReducer,\r\n    settings: settingsReducer,\r\n    request: requestReducer\r\n});\r\n\r\ntype RootReducersType = typeof rootReducers;\r\nexport type AppStateType = ReturnType<RootReducersType>\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  './index.module.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n                <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}