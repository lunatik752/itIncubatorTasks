{"version":3,"sources":["Components/Navbar/Navbar.module.css","Components/Monday/MessageCloud/Cloud/Cloud.module.css","Components/Monday/CharacterList/CharacterItem/CharacterItem.module.css","Components/Monday/HelloCounter/Input/Input.module.css","Components/Monday/Header/Header.module.css","Components/Monday/MessageCloud/MessageCloud.module.css","Components/Monday/MessageCloud/Avatar/Avatar.module.css","Components/Monday/CharacterList/CharacterList.module.css","Components/Monday/HelloCounter/HelloCounter.module.css","Components/Monday/HelloCounter/NamesList/NamesList.module.css","Components/Monday/HelloCounter/NamesList/NameListIItem/NameListItem.module.css","Components/Monday/HelloCounter/Counter/Counter.module.css","Components/Monday/HelloCounter/Button/Button.module.css","Components/Navbar/Navbar.jsx","Components/Monday/Header/Header.jsx","Components/Monday/MessageCloud/Avatar/Avatar.jsx","Components/Monday/MessageCloud/Cloud/Cloud.jsx","Components/Monday/MessageCloud/MessageCloud.jsx","Components/Monday/CharacterList/CharacterItem/CharacterItem.jsx","Components/Monday/CharacterList/CharacterList.jsx","Components/Monday/HelloCounter/NamesList/NameListIItem/NameListItem.jsx","Components/Monday/HelloCounter/NamesList/NamesList.jsx","Components/Monday/HelloCounter/Counter/Counter.jsx","Components/Monday/HelloCounter/Input/Input.jsx","Components/Monday/HelloCounter/Button/Button.jsx","Components/Monday/HelloCounter/HelloCounter.jsx","Components/Monday/Monday.jsx","Components/Tuesday/Tuesday.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Navbar","className","style","nav","item","to","activeClassName","active","Header","header","Avatar","avatar","src","alt","Cloud","cloud","cloudName","cloudText","cloudTime","MessageCloud","cloudWrapper","CharacterItem","props","classCharacterItemRed","filterValue","character","characterItemRed","characterItem","CharacterList","characterElements","id","map","ch","key","characterListWrapper","NameListItem","name","NamesList","namesListElements","namesList","n","namesListWrapper","Counter","counter","counterValue","Input","state","error","nameInput","type","placeholder","placeholderValue","onChange","e","changeInputText","currentTarget","value","onKeyPress","inputText","Button","button","onClick","nameButton","HelloCounter","newText","setState","addName","newCounterValue","newNameListItem","alert","newNamesList","render","helloCounterWrapper","React","Component","Monday","Tuesday","App","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d5f45082.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__28tOU\",\"item\":\"Navbar_item__1jYhS\",\"active\":\"Navbar_active__3F1nD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloud\":\"Cloud_cloud__3xPwq\",\"cloudName\":\"Cloud_cloudName__1EI9m\",\"cloudText\":\"Cloud_cloudText__BEBy9\",\"cloudTime\":\"Cloud_cloudTime__3L4Up\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterItem\":\"CharacterItem_characterItem__1okap\",\"characterItemRed\":\"CharacterItem_characterItemRed__3MGKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameInput\":\"Input_nameInput__wYQRV\",\"error\":\"Input_error__3nQkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__63ask\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloudWrapper\":\"MessageCloud_cloudWrapper__1ktWT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2wTvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterListWrapper\":\"CharacterList_characterListWrapper__NmDVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helloCounterWrapper\":\"HelloCounter_helloCounterWrapper__-mnTc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"namesListWrapper\":\"NamesList_namesListWrapper__f0Mik\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterItem\":\"NameListItem_characterItem__3f6kV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__zjJrJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3DE6_\"};","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to='/monday' activeClassName={style.active}>Понедельник</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/tuesday' activeClassName={style.active}>Вторник</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={style.header}>\r\n            <h1>\r\n                Максим Белый\r\n            </h1>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from './Avatar.module.css';\r\n\r\nconst Avatar = () => {\r\n    return (\r\n        <div className={style.avatar}>\r\n            <img\r\n                src='https://www.vippng.com/png/detail/235-2350325_dicks-out-for-harambe-sample-image-avatar-png.png'\r\n                alt='avatar'/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport style from './Cloud.module.css';\r\n\r\nconst Cloud = () => {\r\n    return (\r\n        <div className={style.cloud}>\r\n            <div className={style.cloudName}>\r\n               <span>Максим Белый</span>\r\n            </div>\r\n            <div className={style.cloudText}>\r\n                <span>Привет!!! Как дела?</span>\r\n            </div>\r\n            <div className={style.cloudTime}>\r\n                <span>15:35</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cloud;","import React from 'react';\r\nimport style from './MessageCloud.module.css';\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport Cloud from \"./Cloud/Cloud\";\r\n\r\nconst MessageCloud = () => {\r\n    return (\r\n        <div className={style.cloudWrapper}>\r\n            <Avatar/>\r\n            <Cloud/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MessageCloud;","import React from 'react';\r\nimport style from './CharacterItem.module.css';\r\n\r\n\r\nconst CharacterItem = (props) => {\r\n\r\n    let classCharacterItemRed = props.filterValue === props.character ? style.characterItemRed : \"\";\r\n\r\n    return (\r\n        <div className={style.characterItem + \" \" + classCharacterItemRed} >\r\n            <span>{props.character}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CharacterItem;","import React from 'react';\r\nimport style from './CharacterList.module.css';\r\nimport CharacterItem from \"./CharacterItem/CharacterItem\";\r\n\r\n\r\nconst CharacterList = () => {\r\n\r\n    let characterList = [\r\n        {id: 1, character: \"Оптимист\"},\r\n        {id: 2, character: \"Авантюрист\"},\r\n        {id: 3, character: \"Рационалист\"},\r\n        {id: 4, character: \"Альтруист\"}\r\n    ];\r\n\r\n    let filterValue = \"Авантюрист\";\r\n\r\n    let characterElements = characterList.map(ch => {\r\n        return <CharacterItem character={ch.character} filterValue={filterValue} key={ch.id}/>\r\n    });\r\n\r\n    return (\r\n        <div className={style.characterListWrapper}>\r\n            {characterElements}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CharacterList;","import React from 'react';\r\nimport style from './NameListItem.module.css';\r\n\r\n\r\nconst NameListItem = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={style.characterItem}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NameListItem;","import React from 'react';\r\nimport style from './NamesList.module.css'\r\nimport NameListItem from \"./NameListIItem/NameListItem\";\r\n\r\n\r\n\r\nconst NamesList = (props) => {\r\n\r\n    let namesListElements = props.namesList.map(n => {\r\n        return <NameListItem name={n.name} key={n.id} />\r\n    });\r\n\r\n    return (\r\n        <div className={style.namesListWrapper}>\r\n            {namesListElements}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default NamesList;","import React from 'react';\r\nimport style from './Counter.module.css'\r\n\r\n\r\n\r\nconst Counter = (props) => {\r\n\r\n    return (\r\n        <div className={style.counter}>\r\n            <span>{props.counterValue}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Counter;","import React from 'react';\r\nimport style from './Input.module.css'\r\n\r\n\r\nconst Input = (props) => {\r\n\r\n    let onInputChange = (e) => {\r\n        props.changeInputText(e.currentTarget.value)\r\n    };\r\n\r\n  let  onKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            props.onKeyPress()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input className={props.state.error ? style.error  : style.nameInput}\r\n                   type=\"text\"\r\n                   placeholder={props.state.placeholderValue}\r\n                   onChange={onInputChange}\r\n                   onKeyPress={onKeyPress}\r\n                   value={props.state.inputText}\r\n            />\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Input;","import React from 'react';\r\nimport style from './Button.module.css'\r\n\r\n\r\n\r\nconst Button = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <button className={style.button}\r\n                    onClick={props.onClick}\r\n            >{props.nameButton}\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Button;","import React from 'react';\r\nimport style from './HelloCounter.module.css';\r\nimport NamesList from \"./NamesList/NamesList\";\r\nimport Counter from \"./Counter/Counter\";\r\nimport Input from \"./Input/Input\";\r\nimport Button from \"./Button/Button\";\r\n\r\nclass HelloCounter extends React.Component {\r\n\r\n    state = {\r\n        namesList: [],\r\n        counterValue: 0,\r\n        inputText: '',\r\n        error: false,\r\n        placeholderValue: 'Введите имя'  //Текст заполнитель в инпуте\r\n    };\r\n\r\n    changeInputText = (newText) => {\r\n        this.setState({\r\n                error: false,\r\n                inputText: newText\r\n            }\r\n        )\r\n    };\r\n\r\n\r\n    addName = () => {\r\n        let newCounterValue = this.state.counterValue + 1;\r\n        let newText = this.state.inputText;\r\n        if (newText === '') {\r\n            this.setState({error: true});\r\n        } else {\r\n            let newNameListItem = {\r\n                name: newText,\r\n                id: this.state.counterValue + 1\r\n            };\r\n            alert('Привет ' + newText + '!!!');\r\n            this.setState({inputText: ''});\r\n            let newNamesList = [...this.state.namesList, newNameListItem];\r\n            this.setState({\r\n                namesList: newNamesList,\r\n                counterValue: newCounterValue\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={style.helloCounterWrapper}>\r\n                <Counter counterValue={this.state.counterValue}/>\r\n                <Input onKeyPress={this.addName} state={this.state} changeInputText={this.changeInputText}/>\r\n                <Button onClick={this.addName} nameButton={'Добавить имя в список'}/>\r\n                <NamesList namesList={this.state.namesList}/>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default HelloCounter;","import React from 'react';\r\nimport Header from \"./Header/Header\";\r\nimport MessageCloud from \"./MessageCloud/MessageCloud\";\r\nimport CharacterList from \"./CharacterList/CharacterList\";\r\nimport HelloCounter from \"./HelloCounter/HelloCounter\";\r\n\r\n\r\nfunction Monday() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <MessageCloud/>\r\n            <CharacterList/>\r\n            <HelloCounter/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Monday;\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nfunction Tuesday() {\r\n    return (\r\n        <div>\r\nЗдесь будут выполненные задания вторника\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tuesday;\r\n\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport Monday from \"./Components/Monday/Monday\";\r\nimport Tuesday from \"./Components/Tuesday/Tuesday\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='App-wrapper'>\r\n            <Navbar/>\r\n            <Route path='/monday'  render={() => <Monday/>}/>\r\n            <Route path='/tuesday'  render={() => <Tuesday/>}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}