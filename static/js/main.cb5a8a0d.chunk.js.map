{"version":3,"sources":["Components/MessageCloud/Cloud/Cloud.module.css","Components/CharacterList/CharacterItem/CharacterItem.module.css","Components/Header/Header.module.css","Components/MessageCloud/MessageCloud.module.css","Components/MessageCloud/Avatar/Avatar.module.css","Components/CharacterList/CharacterList.module.css","Components/HelloCounter/HelloCounter.module.css","Components/HelloCounter/NamesList/NamesList.module.css","Components/HelloCounter/NamesList/NameListIItem/NameListItem.module.css","Components/HelloCounter/Counter/Counter.module.css","Components/HelloCounter/NameInput/NameInput.module.css","Components/HelloCounter/Button/Button.module.css","Components/Header/Header.jsx","Components/MessageCloud/Avatar/Avatar.jsx","Components/MessageCloud/Cloud/Cloud.jsx","Components/MessageCloud/MessageCloud.jsx","Components/CharacterList/CharacterItem/CharacterItem.jsx","Components/CharacterList/CharacterList.jsx","Components/HelloCounter/NamesList/NameListIItem/NameListItem.jsx","Components/HelloCounter/NamesList/NamesList.jsx","Components/HelloCounter/Counter/Counter.jsx","Components/HelloCounter/NameInput/NameInput.jsx","Components/HelloCounter/Button/Button.jsx","Components/HelloCounter/HelloCounter.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Header","className","style","header","Avatar","avatar","src","alt","Cloud","cloud","cloudName","cloudText","cloudTime","MessageCloud","cloudWrapper","CharacterItem","props","classCharacterItemRed","filterValue","character","characterItemRed","characterItem","CharacterList","characterElements","id","map","ch","key","characterListWrapper","NameListItem","name","NamesList","namesListElements","namesList","n","namesListWrapper","Counter","counter","counterValue","NameInput","nameInput","ref","newName","type","placeholder","Button","button","onClick","addName","nameButton","HelloCounter","state","React","createRef","newCounterValue","newNameListItem","current","value","alert","newNamesList","setState","render","helloCounterWrapper","Component","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cb5a8a0d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloud\":\"Cloud_cloud__3lptY\",\"cloudName\":\"Cloud_cloudName__2E4hi\",\"cloudText\":\"Cloud_cloudText__6lNMf\",\"cloudTime\":\"Cloud_cloudTime__1Hj-Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterItem\":\"CharacterItem_characterItem__184Bz\",\"characterItemRed\":\"CharacterItem_characterItemRed__2ETeT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2M3cF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloudWrapper\":\"MessageCloud_cloudWrapper__2bjNv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2fe3j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterListWrapper\":\"CharacterList_characterListWrapper__1uq4H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helloCounterWrapper\":\"HelloCounter_helloCounterWrapper__3jPCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"namesListWrapper\":\"NamesList_namesListWrapper__1WGts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterItem\":\"NameListItem_characterItem__1nKZQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__yGKE6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameInput\":\"NameInput_nameInput__195yd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__VxjS5\"};","import React from 'react';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={style.header}>\r\n            <h1>\r\n                Максим Белый\r\n            </h1>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from './Avatar.module.css';\r\n\r\nconst Avatar = () => {\r\n    return (\r\n        <div className={style.avatar}>\r\n            <img\r\n                src='https://www.vippng.com/png/detail/235-2350325_dicks-out-for-harambe-sample-image-avatar-png.png'\r\n                alt='avatar'/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Avatar;","import React from 'react';\r\nimport style from './Cloud.module.css';\r\n\r\nconst Cloud = () => {\r\n    return (\r\n        <div className={style.cloud}>\r\n            <div className={style.cloudName}>\r\n               <span>Максим Белый</span>\r\n            </div>\r\n            <div className={style.cloudText}>\r\n                <span>Привет!!! Как дела?</span>\r\n            </div>\r\n            <div className={style.cloudTime}>\r\n                <span>15:35</span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cloud;","import React from 'react';\r\nimport style from './MessageCloud.module.css';\r\nimport Avatar from \"./Avatar/Avatar\";\r\nimport Cloud from \"./Cloud/Cloud\";\r\n\r\nconst MessageCloud = () => {\r\n    return (\r\n        <div className={style.cloudWrapper}>\r\n            <Avatar/>\r\n            <Cloud/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MessageCloud;","import React from 'react';\r\nimport style from './CharacterItem.module.css';\r\n\r\n\r\nconst CharacterItem = (props) => {\r\n\r\n    let classCharacterItemRed = props.filterValue === props.character ? style.characterItemRed : \"\";\r\n\r\n    return (\r\n        <div className={style.characterItem + \" \" + classCharacterItemRed} >\r\n            <span>{props.character}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CharacterItem;","import React from 'react';\r\nimport style from './CharacterList.module.css';\r\nimport CharacterItem from \"./CharacterItem/CharacterItem\";\r\n\r\n\r\nconst CharacterList = () => {\r\n\r\n    let characterList = [\r\n        {id: 1, character: \"Оптимист\"},\r\n        {id: 2, character: \"Авантюрист\"},\r\n        {id: 3, character: \"Рационалист\"},\r\n        {id: 4, character: \"Альтруист\"}\r\n    ];\r\n\r\n    let filterValue = \"Авантюрист\";\r\n\r\n    let characterElements = characterList.map(ch => {\r\n        return <CharacterItem character={ch.character} filterValue={filterValue} key={ch.id}/>\r\n    });\r\n\r\n    return (\r\n        <div className={style.characterListWrapper}>\r\n            {characterElements}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CharacterList;","import React from 'react';\r\nimport style from './NameListItem.module.css';\r\n\r\n\r\nconst NameListItem = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={style.characterItem}>\r\n            <span>{props.name}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NameListItem;","import React from 'react';\r\nimport style from './NamesList.module.css'\r\nimport NameListItem from \"./NameListIItem/NameListItem\";\r\n\r\n\r\n\r\nconst NamesList = (props) => {\r\n\r\n    let namesListElements = props.namesList.map(n => {\r\n        return <NameListItem name={n.name} key={n.id} />\r\n    });\r\n\r\n    return (\r\n        <div className={style.namesListWrapper}>\r\n            {namesListElements}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default NamesList;","import React from 'react';\r\nimport style from './Counter.module.css'\r\n\r\n\r\n\r\nconst Counter = (props) => {\r\n\r\n    return (\r\n        <div className={style.counter}>\r\n            <span>{props.counterValue}</span>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Counter;","import React from 'react';\r\nimport style from './NameInput.module.css'\r\n\r\n\r\n\r\nconst NameInput = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <input className={style.nameInput}\r\n                   ref={props.newName}\r\n                   type=\"text\"\r\n                   placeholder=\"Введите имя\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default NameInput;","import React from 'react';\r\nimport style from './Button.module.css'\r\n\r\n\r\n\r\nconst Button = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <button className={style.button}\r\n                    onClick={props.addName}\r\n            >{props.nameButton}\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Button;","import React from 'react';\r\nimport style from './HelloCounter.module.css';\r\nimport NamesList from \"./NamesList/NamesList\";\r\nimport Counter from \"./Counter/Counter\";\r\nimport NameInput from \"./NameInput/NameInput\";\r\nimport Button from \"./Button/Button\";\r\n\r\nclass HelloCounter extends React.Component {\r\n\r\n    state = {\r\n        namesList: [],\r\n        counterValue: 0,\r\n    };\r\n\r\n    newName = React.createRef();\r\n\r\n\r\n    addName = () => {\r\n        let newCounterValue = this.state.counterValue + 1;\r\n        let newNameListItem = {\r\n            name: this.newName.current.value,\r\n            id: this.state.counterValue + 1\r\n        };\r\n        alert('Привет ' + this.newName.current.value + '!!!');\r\n        this.newName.current.value = '';\r\n\r\n        let newNamesList = [...this.state.namesList, newNameListItem];\r\n        this.setState({\r\n            namesList: newNamesList,\r\n            counterValue: newCounterValue\r\n        })\r\n    };\r\n\r\n\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={style.helloCounterWrapper}>\r\n                <Counter counterValue={this.state.counterValue}/>\r\n                <NameInput newName={this.newName} />\r\n                <Button addName={this.addName} nameButton={'Добавить имя в список'}/>\r\n                <NamesList namesList={this.state.namesList}/>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default HelloCounter;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Components/Header/Header';\r\nimport MessageCloud from \"./Components/MessageCloud/MessageCloud\";\r\nimport CharacterList from \"./Components/CharacterList/CharacterList\";\r\nimport HelloCounter from \"./Components/HelloCounter/HelloCounter\";\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='App-wrapper'>\r\n            <Header/>\r\n            <MessageCloud/>\r\n            <CharacterList/>\r\n            <HelloCounter/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}